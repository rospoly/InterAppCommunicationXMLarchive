<?xml version="1.0" encoding="UTF-8"?><androidapplication name="com.netflix.mediaclient">
  <intent classname="com.netflix.mediaclient.service.logging.search.utils.SearchLogUtils" constr.line="-1" id="4" methodname="reportSearchImpression" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_SUS_FOCUS_SEARCH_IMPRESSION</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>reference</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.IkoLogUtils" constr.line="-1" id="10" methodname="reportIkoMomentEnded" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_IKO_MOMENT_ENDED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>momentType</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>expectedVideoOffset</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>momentId</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UserActionLogUtils" constr.line="-1" id="19" methodname="reportStartPostPlay" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_UIA_POSTPLAY_START</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>lengthOfAutoPlayCountdown</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.android.activity.NetflixActivity" constr.line="-1" id="22" methodname="showMDXPostPlayOnResume" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MINI_PLAYER_POST_PLAY_TITLE_NEXT</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>id</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UIViewLogUtils" constr.line="-1" id="35" methodname="sendImpressionBroadcast" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>***</action>
          <info>Destination class not reachable: load 1 of type java.lang.String</info>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>model</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.logging.search.utils.SearchLogUtils" constr.line="-1" id="33" methodname="reportSearchSessionStarted" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_SUS_SEARCH_SESSION_START</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>term</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.IkoLogUtils" constr.line="-1" id="38" methodname="reportIkoVideoPlaybackEnded" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_IKO_VIDEO_PLAYBACK_END</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>errorSubCode</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>errorCode</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pservice.PServiceWidgetAgent" constr.line="-1" id="42" methodname="handleWidgetRefreshReq" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.ALL_MEMBER_UPDATED_FROM_PREAPP_AGENT</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>widgetId</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pdslogging.PdsLoggingUtils" constr.line="-1" id="47" methodname="sendIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>***</action>
          <info>Destination class not reachable: load 1 of type java.lang.String</info>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>***</key>
          <info>getstatic com.netflix.mediaclient.service.pdslogging.PdsDownloadSessionManager.EXTRA_ERROR_CODE:java.lang.String [public static com.netflix.mediaclient.service.pdslogging.PdsDownloadSessionManager.EXTRA_ERROR_CODE:java.lang.String]</info>
        </taintelement>
        <taintelement>
          <key>***</key>
          <info>getstatic com.netflix.mediaclient.service.pdslogging.PdsDownloadSessionManager.EXTRA_ERROR_MESSAGE:java.lang.String [public static com.netflix.mediaclient.service.pdslogging.PdsDownloadSessionManager.EXTRA_ERROR_MESSAGE:java.lang.String]</info>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UserActionLogUtils" constr.line="-1" id="52" methodname="reportAddProfileActionEnded" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_UIA_ADD_PROFILE_ENDED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>profile_name</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UserActionLogUtils" constr.line="-1" id="57" methodname="reportSurveyEnded" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_UIA_SURVEY_ENDED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>surveyType</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="61" methodname="state" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_STATE</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>volume</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>time</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>currentState</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="68" methodname="dialogCancel" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_DIALOGCANCEL</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>stringBlob</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="72" methodname="dialogShow" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_DIALOGSHOW</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>stringBlob</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="75" methodname="postplayState" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_POSTPLAY</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>postplayState</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pservice.PServiceWidgetAgent" constr.line="-1" id="86" methodname="launchNflxAction" type="new Intent (String, Uri)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>android.intent.action.VIEW</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>widgetId</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UserActionLogUtils" constr.line="-1" id="99" methodname="reportEndPostPlay" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_UIA_POSTPLAY_ENDED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>trackId</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>chosenVideoId</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pushnotification.NotificationBuilder" constr.line="-1" id="114" methodname="getNotificationOpenedIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>android.intent.action.VIEW</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>originator</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UserActionLogUtils" constr.line="-1" id="113" methodname="reportSurveyQuestionEnded" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_UIA_SURVEY_QUESTION_ENDED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>question</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UIViewLogUtils" constr.line="-1" id="139" methodname="reportUIViewCommandStarted" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_UIVIEW_CMD_START</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>url</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>model</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pservice.PServiceWidgetAgent" constr.line="-1" id="133" methodname="getWidgetPlayIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.PLAY_1_FROM_PREAPP_WIDGET</action>
          <info/>
        </outaction>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.PLAY_3_FROM_PREAPP_WIDGET</action>
          <info/>
        </outaction>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.PLAY_2_FROM_PREAPP_WIDGET</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>videoId</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>widgetId</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pservice.PServiceWidgetAgent" constr.line="-1" id="153" methodname="getWidgetHomeIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.HOME_FROM_PREAPP_WIDGET</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>videoId</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>widgetId</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UserActionLogUtils" constr.line="-1" id="154" methodname="reportEditProfileActionEnded" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_UIA_EDIT_PROFILE_ENDED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>profile_name</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.ApmLogUtils" constr.line="-1" id="155" methodname="reportDataRequestStarted" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_APM_DATA_REQUEST_STARTED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>url</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UserActionLogUtils" constr.line="-1" id="157" methodname="reportSearchActionStarted" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_UIA_SEARCH_START</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>term</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UserActionLogUtils" constr.line="-1" id="150" methodname="reportShareSheetOpenActionStarted" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_UIA_SHARE_SHEET_OPEN_START</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>url</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pservice.PServiceWidgetAgent" constr.line="-1" id="151" methodname="getWidgetDetailsIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.DETAILS_3_FROM_PREAPP_WIDGET</action>
          <info/>
        </outaction>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.DETAILS_1_FROM_PREAPP_WIDGET</action>
          <info/>
        </outaction>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.DETAILS_2_FROM_PREAPP_WIDGET</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>videoId</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>widgetId</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pservice.PServiceWidgetAgent" constr.line="-1" id="168" methodname="getWidgetRefreshIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.REFRESH_FROM_PREAPP_WIDGET</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>videoId</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>widgetId</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="175" methodname="requestPinVerification" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.PIN_VERIFICATION_SHOW</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>videoId</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>ancestorVideoType</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>ancestorVideoId</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>title</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pushnotification.NotificationBuilder" constr.line="-1" id="177" methodname="getNotificationOpenedIntentForBrowserRedirect" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.NOTIFICATION_BROWSER_REDIRECT</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>target_url</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>originator</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pushnotification.NotificationBuilder" constr.line="-1" id="205" methodname="getNotificationCanceledIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.NOTIFICATION_CANCELED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>originator</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="195" methodname="error" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_ERROR</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>errorDesc</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="194" methodname="movieMetaData" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_MOVIEMETADA</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>episodeId</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>catalogId</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>duration</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="221" methodname="audiosub" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_AUDIOSUB</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>stringBlob</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="208" methodname="capability" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_CAPABILITY</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>stringBlob</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UserActionLogUtils" constr.line="-1" id="211" methodname="reportDeleteProfileActionStarted" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_UIA_DELETE_PROFILE_START</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>profile_id</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.ui.iris.notifications.type.BaseNotification$1onBoxArtFetched" constr.line="-1" id="237" methodname="onResponse" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.NOTIFICATION_CANCELED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>swiped_notification_id</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.MdxAgent" constr.line="-1" id="234" methodname="sendVolumeUpdateBroadcast" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDX_SETVOLUME</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="230" methodname="playbackStart" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_PLAYBACKSTART</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.falkor.CachedModelProxy$SetVideoRatingTask" constr.line="-1" id="254" methodname="notifyUserRatingChanged" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.falkor.ACTION_NOTIFY_OF_RATINGS_CHANGE</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>extra_video_id</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.user.UserAgent" constr.line="-1" id="253" methodname="logoutUser" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.PUSH_ONLOGOUT</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>sid</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>nid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="251" methodname="playbackEnd" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_PLAYBACKEND</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>postplayState</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.MdxAgent" constr.line="-1" id="246" methodname="getResumeIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDX_RESUME</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.ui.common.ExportDebugData" constr.line="-1" id="243" methodname="export" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>android.intent.action.SEND_MULTIPLE</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>android.intent.extra.TEXT</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>android.intent.extra.STREAM</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pushnotification.NotificationBuilder" constr.line="-1" id="274" methodname="getNotificationOpenedIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>android.intent.action.VIEW</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>originator</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.MdxAgent" constr.line="-1" id="273" methodname="getPlayNextIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDX_PLAY_VIDEOIDS</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>episodeId</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>catalogId</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.OfflineLogUtils" constr.line="-1" id="272" methodname="reportCachedPlayStart" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_OFFLINE_CACHED_PLAY_SESSION_STARTED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>runtime</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>logicalEnd</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>logicalStart</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pservice.PServiceWidgetAgent" constr.line="-1" id="279" methodname="getNextVideo" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.ALL_MEMBER_UPDATED_FROM_PREAPP_AGENT</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>widgetId</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="278" methodname="simplePlaybackState" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_SIMPLE_PLAYBACKSTATE</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>postplayState</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="283" methodname="abortPinVerification" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.PIN_VERIFICATION_NOT_REQUIRED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.MdxAgent" constr.line="-1" id="285" methodname="getStopIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDX_STOP</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="258" methodname="movieMetaDataAvailable" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_MOVIEMETADATA_AVAILABLE</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.UserActionLogUtils" constr.line="-1" id="263" methodname="reportNewLolomoActionEnded" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_UIA_NEW_LOLOMO_ENDED</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>renoCause</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>renoMessageGuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.MdxAgent" constr.line="-1" id="260" methodname="getSkipbackIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDX_SKIP</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.MdxAgent" constr.line="-1" id="261" methodname="getPauseIntent" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDX_PAUSE</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.ClientNotifier" constr.line="-1" id="289" methodname="metaData" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MDXUPDATE_METADATA</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>uuid</key>
          <info/>
        </taintelement>
        <taintelement>
          <key>stringBlob</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.util.log.IkoLogUtils" constr.line="-1" id="294" methodname="reportIkoVideoLoadStarted" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.LOG_IKO_VIDEO_LOAD_START</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>url</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.ui.mdx.MdxReceiver$FetchPostPlayForPlaybackCallback" constr.line="-1" id="297" methodname="onEpisodeDetailsFetched" type="new Intent (String)">
    <outputcommunication>
      <outactions>
        <outaction>
          <action>com.netflix.mediaclient.intent.action.MINI_PLAYER_POST_PLAY_TITLE_NEXT</action>
          <info/>
        </outaction>
      </outactions>
      <taintedness>
        <taintelement>
          <key>id</key>
          <info/>
        </taintelement>
      </taintedness>
    </outputcommunication>
    <inputcommunication/>
  </intent>
  <intent classname="com.netflix.mediaclient.ui.search.SearchActivity" constr.line="-1" id="339" methodname="onCreate" type="Intent Received (getIntent)">
    <outputcommunication/>
    <inputcommunication exists="true" exported="true">
      <inactions>
        <inaction>android.intent.action.SEARCH</inaction>
      </inactions>
    </inputcommunication>
  </intent>
  <intent classname="com.netflix.mediaclient.ui.launch.NetflixComLaunchActivity" constr.line="-1" id="346" methodname="onCreate" type="Intent Received (getIntent)">
    <outputcommunication/>
    <inputcommunication exists="true" exported="true">
      <inactions>
        <inaction>android.intent.action.VIEW</inaction>
      </inactions>
    </inputcommunication>
  </intent>
  <intent classname="com.netflix.mediaclient.ui.profiles.RestrictedProfilesReceiver" constr.line="-1" id="374" methodname="onReceive" type="Intent from Parameter">
    <outputcommunication/>
    <inputcommunication exists="true" exported="true">
      <inactions>
        <inaction>android.intent.action.GET_RESTRICTION_ENTRIES</inaction>
      </inactions>
    </inputcommunication>
  </intent>
  <intent classname="com.netflix.mediaclient.ui.search.SearchActivity" constr.line="-1" id="380" methodname="onNewIntent" type="Intent from Parameter">
    <outputcommunication/>
    <inputcommunication exists="true" exported="true">
      <inactions>
        <inaction>android.intent.action.SEARCH</inaction>
      </inactions>
    </inputcommunication>
  </intent>
  <intent classname="com.netflix.mediaclient.service.pushnotification.NotificationReceiver" constr.line="-1" id="414" methodname="onReceive" type="Intent from Parameter">
    <outputcommunication/>
    <inputcommunication exists="true" exported="true">
      <inactions>
        <inaction>com.netflix.mediaclient.intent.action.NOTIFICATION_PLAY</inaction>
        <inaction>com.netflix.mediaclient.intent.action.NOTIFICATION_MOVIE_DETAILS</inaction>
        <inaction>com.netflix.mediaclient.intent.action.NOTIFICATION_CANCELED</inaction>
        <inaction>com.netflix.mediaclient.intent.action.NOTIFICATION_IRIS</inaction>
        <inaction>com.netflix.mediaclient.intent.action.NOTIFICATION_SHOW_DETAILS</inaction>
        <inaction>com.netflix.mediaclient.intent.action.NOTIFICATION_BROWSER_REDIRECT</inaction>
      </inactions>
    </inputcommunication>
  </intent>
  <intent classname="com.netflix.mediaclient.service.job.NetworkChangeReceiver" constr.line="-1" id="402" methodname="onReceive" type="Intent from Parameter">
    <outputcommunication/>
    <inputcommunication exists="true" exported="true">
      <inactions>
        <inaction>android.net.conn.CONNECTIVITY_CHANGE</inaction>
      </inactions>
    </inputcommunication>
  </intent>
  <intent classname="com.netflix.mediaclient.InstallReferrerReceiver" constr.line="-1" id="406" methodname="onReceive" type="Intent from Parameter">
    <outputcommunication/>
    <inputcommunication exists="true" exported="true">
      <inactions>
        <inaction>com.android.vending.INSTALL_REFERRER</inaction>
      </inactions>
    </inputcommunication>
  </intent>
  <intent classname="com.netflix.mediaclient.service.user.PartnerReceiver" constr.line="-1" id="393" methodname="onReceive" type="Intent from Parameter">
    <outputcommunication/>
    <inputcommunication exists="true" exported="true">
      <inactions>
        <inaction>com.netflix.mediaclient.intent.action.USER_STATUS</inaction>
      </inactions>
    </inputcommunication>
  </intent>
  <intent classname="com.netflix.mediaclient.service.mdx.RemoteControlClientManager$MediaButtonIntentHandlerProxy" constr.line="-1" id="436" methodname="onReceive" type="Intent from Parameter">
    <outputcommunication/>
    <inputcommunication exists="true" exported="true">
      <inactions>
        <inaction>android.intent.action.MEDIA_BUTTON</inaction>
      </inactions>
    </inputcommunication>
  </intent>
  <intent classname="com.netflix.mediaclient.ui.launch.NetflixComLaunchActivity" constr.line="-1" id="450" methodname="onNewIntent" type="Intent from Parameter">
    <outputcommunication/>
    <inputcommunication exists="true" exported="true">
      <inactions>
        <inaction>android.intent.action.VIEW</inaction>
      </inactions>
    </inputcommunication>
  </intent>
</androidapplication>
